jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Sisaf\SisafBundle\Entity\usuario:
            algorithm: sha512
            encode-as-base64: true
            iterations: 10

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        chain_provider:
                chain:
                    providers: [in_memory, user_db]
        in_memory:
            memory:
                users:
                    admin: { password: dev, roles: [ 'ROLE_ADMIN' ] }
                    Developer: { password: DscropDeveloper, roles: [ 'ROLE_ADMIN' ] }
        user_db:
            entity: { class: Sisaf\SisafBundle\Entity\usuario, property: email }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login$
            security: false

        login_firewall:
            pattern:    ^/login$
            anonymous:  ~

        secured_area:
            pattern:    ^/
            anonymous:  ~
            form_login:
                login_path:  login
                check_path:  login_check
                remember_me: true
            logout:
                path:   /logout
                target: /login
            remember_me:
                key: holysoymuyseguro
                lifetime: 1800
                path: /.*
                domain: ~
        main:
            pattern: /.*
            provider: user_db
            http_basic: ~
            stateless:  true
#           #anonymous: ~
#            #http_basic:
#            #    realm: "Secured Demo Area"

    access_control:
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/, roles: ROLE_ADMIN }
    - { path: ^/, roles: ROLE_USER }

        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #
        # You must uncomment the two following rules to restrict access to paths
        # starting with the /_internal prefix to only localhost
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        #- { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
